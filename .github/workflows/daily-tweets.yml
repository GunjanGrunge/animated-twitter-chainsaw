name: Daily Tweet Generation

on:
  schedule:
    # Runs twice daily at 8:30 AM and 4:30 PM IST (3:00 AM and 11:00 AM UTC)
    - cron: '0 3,11 * * *'
  workflow_dispatch: # Allows manual trigger

permissions:
  contents: write

jobs:
  generate-schedule:
    runs-on: ubuntu-latest
    timeout-minutes: 5  # Shorter timeout for schedule generation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Generate tweet schedule
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SESSION: ${{ github.event.schedule == '0 3 * * *' && 'morning' || 'evening' }}
        run: |
          max_attempts=3
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt of $max_attempts to generate schedule"
            if node generateSchedule.js; then
              echo "Schedule generated successfully"
              break
            else
              if [ $attempt -eq $max_attempts ]; then
                echo "Failed to generate schedule after $max_attempts attempts"
                exit 1
              fi
              echo "Waiting before retry..."
              sleep 30
              ((attempt++))
            fi
          done

      - name: Commit schedule
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add tweetSchedule.json
          git diff-index --quiet HEAD || (git commit -m "Generate tweet schedule" && git push)

  post-tweets:
    needs: generate-schedule
    runs-on: ubuntu-latest
    timeout-minutes: 120  # 2 hours to allow for tweet intervals

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Post scheduled tweets
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git before any operations
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          failed_tweets=0
          
          for i in {0..3}; do
            echo "Posting tweet $((i+1)) of 4..."
            
            # Fetch and reset to origin/main to ensure clean state
            git fetch origin main
            git reset --hard origin/main
            
            if ! node postScheduledTweet.js $i; then
              echo "Warning: Failed to post tweet $((i+1))"
              ((failed_tweets++))
            fi
            
            if [ $failed_tweets -ge 3 ]; then
              echo "Too many failed tweets, stopping process"
              exit 1
            fi
            
            # Commit changes with retries
            max_retries=3
            retry_count=0
            while [ $retry_count -lt $max_retries ]; do
              if git add tweetHistory.json tweetSchedule.json && \
                 git commit -m "Update tweet history for tweet $((i+1))" && \
                 git pull --rebase origin main && \
                 git push; then
                break
              else
                ((retry_count++))
                if [ $retry_count -eq $max_retries ]; then
                  echo "Failed to push changes after $max_retries attempts"
                  exit 1
                fi
                echo "Push failed, retrying... (attempt $retry_count of $max_retries)"
                sleep 5
              fi
            done
            
            if [ $i -lt 3 ]; then
              wait_time=$(node -e "
                const schedule = require('./tweetSchedule.json');
                const tweet = schedule.tweets[$i];
                const nextTweet = schedule.tweets[$i + 1];
                const waitMinutes = Math.floor((new Date(nextTweet.scheduledTime) - new Date(tweet.scheduledTime)) / 60000);
                console.log(Math.max(waitMinutes * 60, 300));  // Minimum 5 minutes wait
              ")
              echo "Waiting ${wait_time} seconds before next tweet..."
              sleep $wait_time
            fi
          done
          
          exit $failed_tweets

      - name: Final cleanup
        if: always()
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add tweetSchedule.json
          git diff-index --quiet HEAD || (git commit -m "Generate tweet schedule" && git push)
